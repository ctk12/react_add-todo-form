{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","userid","foundUser","userD","find","userdata","className","href","TodoInfo","todo","user","classNames","TodoList","todolist","userlist","map","list","App","useState","setTitle","setUser","todosFromServer","setTodolist","titleError","setTitleError","userError","setUserError","onSubmit","eventsubmit","preventDefault","trim","Math","max","toLowerCase","Number","handleOnSubmit","placeholder","value","type","onChange","element","validateTitle","split","filter","char","match","join","handleTitleChange","target","disabled","usersFromServer","users","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03f47f7e.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  userid: number,\n  userD: User[],\n};\n\nexport const UserInfo: React.FC<Props> = ({ userid, userD }) => {\n  const foundUser = userD.find(userdata => userdata.id === userid);\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${foundUser ? foundUser.email : ''}`}>\n      {foundUser ? foundUser.name : ''}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  user: User[],\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo, user }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {userId && (\n        <UserInfo userid={userId} userD={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todolist: Todo[],\n  userlist: User[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todolist, userlist }) => {\n  return (\n    <section className=\"TodoList\">\n      {todolist.map(list => (\n        <TodoInfo key={list.id} todo={list} user={userlist} />\n      ))}\n    </section>\n  );\n};\n","import React, { FormEvent, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState('0');\n  const [todolist, setTodolist] = useState(todosFromServer);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleTitleChange = (value: string) => {\n    const validateTitle = value.split('').filter(char => {\n      return char.match(/^[A-Za-z]*$/) || char.match(/\\s/);\n    });\n\n    setTitle(validateTitle.join(''));\n  };\n\n  const handleOnSubmit = (eventsubmit: FormEvent) => {\n    eventsubmit.preventDefault();\n    setTitleError(!title.trim());\n    setUserError(user === '0');\n    if (title.trim() !== '' && user !== '0') {\n      setTodolist([\n        ...todolist,\n        {\n          id: Math.max(...todolist.map(todo => todo.id)) + 1,\n          title: title.toLowerCase(),\n          completed: false,\n          userId: Number(user),\n        },\n      ]);\n      setTitle('');\n      setUser('0');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={(eventsubmit) => handleOnSubmit(eventsubmit)}>\n        <div className=\"field\">\n          <input\n            placeholder=\"Enter Title\"\n            value={title}\n            type=\"text\"\n            data-cy=\"titleInput\"\n            onChange={(element) => handleTitleChange(element.target.value)}\n          />\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            value={user}\n            data-cy=\"userSelect\"\n            onChange={(element) => setUser(element.target.value)}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(users => (\n              <option value={users.id}>{users.name}</option>\n            ))}\n          </select>\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todolist={todolist} userlist={usersFromServer} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}